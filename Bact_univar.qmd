# Univariate distribution checks

This section reports a series of univariate summary checks of the bacteremia dataset.

```{r uni01, message =FALSE, warning =FALSE , echo=FALSE}
library(here)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyselect)
library(gt)
library(gtExtras)
library(patchwork)
library(Hmisc)
library(sjlabelled)

set.seed(1972)  ## for any simulation or numerical approx calculations 

# Load the first iteration of the IDA ready data sets
ADSL <- readRDS(here::here("data", "IDA", "ADSL_01.rds"))
ADLB <- readRDS(here::here("data", "IDA", "ADLB_01.rds"))
```

## U1: Categorical variables

Age group, sex and bacteremia status are described by frequencies and proportions in each category.

```{r U1-catplot, message=FALSE, warning =FALSE , echo=FALSE, include = TRUE}

source(here("R", "U1-categorical.R"))
 
u1_ard <- u1_describe(ADSL = ADSL)
# u1_ard |> glimpse()

## Run this for word report
u1_display_table_word(u1_ard) 

## Run this for online website
##u1_display_table_html(u1_ard)

```


Also plot the categories as simple bar charts.  

```{r u1-catplot2, message=FALSE, warning=FALSE, echo=FALSE}
#| fig-cap: "Summary of categorical variables including outcome"
#| fig-width: 18
#| fig-height: 5
#| fig-align: center

source(here("R", "U1-categorical.R"))
u1_display_plot(u1_ard)

```


## Continuous variables

### U2: Univariate distributions of continuous variables

#### U2: Structural variables

The only structural continuous variable is AGE. This variable is also a key predictor and reported in the following section (see below).

#### U2: Key predictors

Distribution of key predictors. Lines indicate the 5-number summary including reported numerical values (where possible). 

The remaining predictors are reported in the appendix @sec-u2-remaining.


```{r uni02, message=FALSE, warning =FALSE , echo=FALSE}
#| layout-ncol: 3
#| fig-width: 4
#| fig-height: 2


source(here::here("R", "U2-cont-describe-plot.R"))

key_plts <-
  ADLB |>
  filter(KEY_PRED_FL01 == "Y") |>
  group_by(PARAM) |>
  group_map(~ describe_plot(.x, num_bins = 300))

for (plts in key_plts) {
  print(plts)
}

```

#### U2: Predictors of medium importance

```{r uni03, message=FALSE, warning=FALSE, echo=FALSE}
#| layout-ncol: 3
#| fig-width: 4
#| fig-height: 2

med_plts <-
  ADLB |>
  filter(MED_PRED_FL01 == "Y") |>
  group_by(PARAM) |>
  group_map(~ describe_plot(.x, num_bins = 300))

for (plts in med_plts) {
  print(plts)
}

```


### Numerical summaries

#### Key predictors


```{r sumtools, results='asis', message =FALSE, warning =FALSE , echo=FALSE}

key_predictors <-
  ADLB |>
  filter(KEY_PRED_FL01 == "Y") |>
  select(USUBJID, PARAMCD, AVAL) |>
  pivot_wider(names_from = "PARAMCD", values_from = "AVAL") |>
  select(-USUBJID)

html(describe(key_predictors, size = "tiny"))

```


#### Predictors of medium importance

```{r uni06, results='asis', message =FALSE, warning =FALSE , echo=FALSE}

medium_predictors <-
  ADLB |>
  filter(MED_PRED_FL01 == "Y") |>
  select(USUBJID, PARAMCD, AVAL) |>
  pivot_wider(names_from = "PARAMCD", values_from = "AVAL") |>
  select(-USUBJID)

html(describe(medium_predictors, size = "tiny"))

```


### Suggested transformations

Next we investigate whether a pseudolog transformation of continuous variables may substantially symmetrize the univariate distributions of the continuous variables, and may hence be useful for multivariate summaries. We employ a function `ida_trans` for this purpose, which optimises the parameter `sigma` of the pseudo-logarithm for that purpose. The optimization targets the best possible linear correlation of the transformed values with normal deviates. If no better transformation can be found, or if the improvement in correlation is less than 0.2 correlation units, no transformation is suggested.

```{r uni08, message =FALSE, warning =FALSE , echo=FALSE}

source(here("R", "fun_ida_trans.R"))

## need to rethink the param and paramcd interaction
suggested_transforms <- 
   ADLB |> 
   group_by(PARAMCD) |>
   group_map(~ ida_trans(.x, equ.marg=0.2), .keep = TRUE)

```


Display the proposed variable transformations and the new parameter codes. 


```{r}
new_vars <- NULL
 
for (param in suggested_transforms)
   if(!is.na(param$const))
     new_vars <- bind_rows(new_vars, param$dat)

## TODO: losing the label attributes with this bind 
ADLB_02 <- bind_rows(ADLB, new_vars) 
ADLB_02 <- sjlabelled::copy_labels(ADLB_02, ADLB)  

new_vars |> group_by(PARAMCD) |> 
  tally() |> 
  gt() |> 
  gt_theme_538()


```

Register transformed variables in the data set. The updated data set with suggested log transformed data sets is saved at `data/IDA/ADLB_02.rds`.

The IDA analysis plan and specifications are updated with the proposed variable transformations. A new flag is derived to indicate the categorization of predictors now including transformations. 

```{r savedata, message=FALSE, warning=FALSE, echo=FALSE}
ADLB_02 <-
  ADLB_02 |>
  mutate(
    KEY_PRED_FL02 = case_when(
      PARAMCD %in% c("AGE", "WBC_T", "BUN", "CREA_T", "PLT", "NEU") ~ "Y"
      ),
    MED_PRED_FL02 = case_when(
      PARAMCD %in% c("POTASS", "FIB", "CRP", "ASAT_T", "ALAT_T", "GGT_T") ~ "Y"
      ),
    REM_PRED_FL02 = case_when(
      PARAMCD %in% c("MCV", "HGB", "HCT", "MCH", "MCHC", "RDW", "MPV", "LYM_T", "MONO", "EOS_T", "BASO", "NT", "APTT", "SODIUM", "CA", "PHOS", "MG", "HS", "GBIL_T", "TP", "ALB", "AMY_T", "PAMY_T", "LIP_T", "CHE", "AP_T", "LDH_T", "CK_T", "GLU", "TRIG", "CHOL", "BASOR_T", "EOSR", "LYMR", "MONOR", "NEUR", "PDW", "RBC") ~ "Y"
      )
  )

attr(ADLB_02$KEY_PRED_FL02, "label") <- "Key predictor flag - including scale transformations, Section 2.2.5 U2"
attr(ADLB_02$MED_PRED_FL02, "label") <- "Predictors of medium importance flag - including scale transformations"
attr(ADLB_02$REM_PRED_FL02, "label") <- "Remaining predictors flag - including scale transformations"

attr(ADLB_02$PARCAT02, "label") <- "Pseudo log transformed categories"
attr(ADLB_02$SIGMA, "label") <- "Constant variable for Pseudo log transformation"

saveRDS(ADLB_02, file = here("data", "IDA", "ADLB_02.rds"))
```


### Comparison of univariate distributions with and without pseudo-log transformation

The comparison is only shown for variables where a transformation is suggested. Note, all observed values, and the distribution min, max and interquartile range as reference lines, are displayed.

```{r uni-plots, message=FALSE, warning=FALSE, echo=FALSE, fig.height=3}
#| layout-ncol: 2

## plot side by side
source(here("R", "fun_compare_dist_plot.R"))

## Load in updated data set with transformations 
ADLB_02 <- readRDS(here::here("data", "IDA", "ADLB_02.rds"))

res <- 
   ADLB_02 |> 
   filter(PARCAT02 == "Y") |>
   group_by(PARAMCD) |>
   group_map(~ compare_dist_plot(.x), .keep = TRUE)

for (plts in res) {
  print(plts)
}

```
